import{_ as n}from"./chunks/ImageWithCaption.aka68_Pk.js";import{D as p}from"./chunks/Divider.CORb21fW.js";import{c as h,o as k,ab as l,H as a,x as i,a as e}from"./chunks/vendor.cEhGAX-6.js";import"./app.CIT9OlTO.js";const c=JSON.parse('{"title":"组合模式","description":"","frontmatter":{},"headers":[],"relativePath":"JS/Patterns/Composite.md","filePath":"JS/Patterns/Composite.md","lastUpdated":null}'),t={name:"JS/Patterns/Composite.md"},o=Object.assign(t,{setup(r){return(E,s)=>(k(),h("div",null,[s[0]||(s[0]=l("",9)),a(n,{src:"/refactoring/composite/composite-comic-1-en.png",caption:"你可以利用组合模式,在树状对象结构上,递归执行某些操作"}),s[1]||(s[1]=i("p",null,"这种方法最大的好处是,你不需要关心树是由哪些具体对象组合而成的.你无需知道某个节点仅是一个简单的产品对象,还是复杂的盒子对象.你通过一个通用的接口,对它们进行相同的操作.你只需要调用这个方法,对象自身就会将请求沿树结构传递下去.",-1)),s[2]||(s[2]=i("h2",{id:"真实世界的类比",tabindex:"-1"},[e("真实世界的类比 "),i("a",{class:"header-anchor",href:"#真实世界的类比","aria-label":"Permalink to “真实世界的类比”"},"​")],-1)),a(n,{src:"/refactoring/composite/live-example.png",caption:"军队里的上下属关系就可以用来作类比"}),s[3]||(s[3]=i("p",null,"大部分国家的军队都是分层级的.一个军队包含多个师,每个师又包含多个团,每个团又包含多个营,每个营又包含多个连...直到底层,由一个个真实存在的士兵组成.而命令的传递,也是从最高层级开始,逐层向下传递,直到对应需要执行层级的每个人都知晓并执行.",-1)),a(p),s[4]||(s[4]=l("",18))]))}});export{c as __pageData,o as default};
