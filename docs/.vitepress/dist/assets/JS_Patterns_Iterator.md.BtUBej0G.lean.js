import{_ as l}from"./chunks/ImageWithCaption.aka68_Pk.js";import{D as h}from"./chunks/Divider.2rewYWNc.js";import{c as k,o as t,ab as p,H as n,x as i,a}from"./chunks/vendor.cEhGAX-6.js";import"./app.S3M1Xn-w.js";const e="/refactoring/iterator/iterator-en.png",b=JSON.parse('{"title":"迭代器模式","description":"","frontmatter":{},"headers":[],"relativePath":"JS/Patterns/Iterator.md","filePath":"JS/Patterns/Iterator.md","lastUpdated":null}'),r={name:"JS/Patterns/Iterator.md"},o=Object.assign(r,{setup(E){return(d,s)=>(t(),k("div",null,[s[0]||(s[0]=p("",7)),n(l,{src:"/refactoring/iterator/problem1.png",caption:"各种类型的集合"}),s[1]||(s[1]=i("p",null,[a("大部分集合都是将元素存储到简单列表中.然而,有些集合可能会基于栈,树,图或其它复杂数据结构存储."),i("br"),a(" 不过无论集合是什么结构的,它都必须提供一些读取元素的方法,这样其它代码才能使用到这些被存储的元素.我们需要有对应的方法,遍历集合中的元素,而不是重复地读取同一个元素."),i("br"),a(" 当集合是基于列表形式存储时,这个方法比较简单.你只需要循环读取元素即可.不过,你要如何按顺序遍历一个,像树这样的复杂结构的元素呢?比如,你很聪明,会用深度优先搜索,遍历一棵树.可之后你又需要按广度优先搜索,遍历同一棵树.再然后,你又需要其它遍历方式,比如随机读取树的某个元素.此时你又要怎么办呢?")],-1)),n(l,{src:"/refactoring/iterator/problem2.png",caption:"同一个集合可以有多种遍历方式"}),s[2]||(s[2]=i("p",null,[a("越来越多的遍历方式,可能会使集合原本的功能变得模糊,而集合的本身,就是为了存储效率我们才选用的.此外,一些遍历算法可能只适用于某个特定场景,如果把这些算法添加到通用集合中的话,那就太奇怪了."),i("br"),a(" 此外,客户端代码,可能根本不会在意他们使用的数据,背后是怎样存储起来的.可是由于各种集合都有不同的读取方法,你除了将代码耦合到特定集合类外,别无选择.")],-1)),s[3]||(s[3]=i("h2",{id:"解决方法",tabindex:"-1"},[a("解决方法 "),i("a",{class:"header-anchor",href:"#解决方法","aria-label":"Permalink to “解决方法”"},"​")],-1)),s[4]||(s[4]=i("p",null,'遍历器模式的主旨是,将集合的遍历行为提取到独立的对象中,我们将这个对象称为"迭代器".',-1)),n(l,{src:"/refactoring/iterator/solution1.png",caption:"遍历算法由各种遍历器实现.多个遍历对象可以同时遍历相同的数据集合."}),s[5]||(s[5]=i("p",null,[a("除了实现遍历算法外,遍历器对象会把所有遍历细节给封装起来,比如当前遍历到的位置,以及还剩多少元素没被遍历.因此,我们的遍历器对象互相独立,可以并行地遍历同一个集合."),i("br"),a(" 一般情况下,遍历器会有一个主要方法,用于获取集合的元素.客户端可以不断调用这个方法,直到它不再返回内容,也意味着遍历器已经遍历完所有元素了."),i("br"),a(" 所有的遍历器都需要实现相同的接口.这样客户端代码才能与任意集合类型或遍历算法所兼容,有合适的遍历器时才能正确实现遍历.如果你需要一个特殊的方法遍历集合,你只需要创建新的遍历器类,而不用修改集合类型,或是修改客户端代码.")],-1)),s[6]||(s[6]=i("h2",{id:"真实世界的比喻",tabindex:"-1"},[a("真实世界的比喻 "),i("a",{class:"header-anchor",href:"#真实世界的比喻","aria-label":"Permalink to “真实世界的比喻”"},"​")],-1)),n(l,{src:"/refactoring/iterator/iterator-comic-1-en.png",caption:"各种游罗马的方式"}),s[7]||(s[7]=i("p",null,[a("比如说你计划周游罗马,参观它的所有景点.但你到了那之后,如果瞎兜圈就太浪费时间了."),i("br"),a(" 不过,你可以在手机上下载虚拟导游应用来进行导航.这种方式又只能又省钱,你还可以在你觉得有趣的地方想停留多久就停留多久."),i("br"),a(" 而第三种方案是,你可以花些钱请导游,他对罗马可太熟悉了.他能根据你的喜好制定你的路线,为你讲解每个景点.金钱的力量可太强大了,如果你的实力允许的话."),i("br"),a(' 所有的选项--无头苍蝇一样乱逛/用手机导航/请导游--都是我们的"遍历器",用于浏览罗马的所有景点.')],-1)),n(h),s[8]||(s[8]=p("",19))]))}});export{b as __pageData,o as default};
