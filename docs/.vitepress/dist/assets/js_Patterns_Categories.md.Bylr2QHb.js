import{_ as l}from"./app.E6B-SwxD.js";import{c as t,o as e,Z as r}from"./chunks/vendor.GdCD6OUn.js";const _=JSON.parse('{"title":"设计模式的分类","description":"","frontmatter":{},"headers":[],"relativePath":"js/Patterns/Categories.md","filePath":"js/Patterns/Categories.md","lastUpdated":1742216147000}'),a={name:"js/Patterns/Categories.md"};function o(p,i,s,n,d,c){return e(),t("div",null,i[0]||(i[0]=[r('<h1 id="设计模式的分类" tabindex="-1">设计模式的分类 <a class="header-anchor" href="#设计模式的分类" aria-label="Permalink to “设计模式的分类”">​</a></h1><blockquote><p>是Javascript设计模式的种类合集, 这篇FCC的文章介绍了一部分,也告知了模式的缘由.<br> 本文先总结前文未包括的,后续方便对前文进行补充.<br> 以下来自<a href="http://www.javier8a.com/itc/bd1/articulo.pdf" target="_blank" rel="noreferrer">GoF</a>一书.属于设计模式的一本&quot;圣经&quot;了.<br> 共23种, 前文介绍了12种.<br> Done 5+适配/装饰/外观/代理 4 + 责任链/迭代器/观察者 3 =12<br> 参考:<a href="https://refactoring.guru/design-patterns/catalog" target="_blank" rel="noreferrer">https://refactoring.guru/design-patterns/catalog</a></p></blockquote><ul><li><p>Creational Patterns</p><ul><li>Abstract Factory抽象工厂模式]()√</li><li>Builder构造者模式]()√</li><li>Factory Method工厂方法模式]()√</li><li>Prototype原型模式]()√</li><li>Singleton单例模式]()√</li></ul></li><li><p>Structural Patterns</p><ul><li>Adapter适配器模式]()√</li><li>Bridge桥接模式]()</li><li>Composite组合模式]()</li><li>Decorator装饰器模式]()√</li><li>Facade外观模式]()√</li><li>Flyweight享元模式]()</li><li>Proxy代理模式]()√</li></ul></li><li><p>Behavioral Patterns</p><ul><li>Chain of Responsibility责任链模式]()√</li><li>Command命令模式]()</li><li>Interpreter解释器模式]()</li><li>Iterator迭代器模式]()√</li><li>Mediator中介者模式]()</li><li>Memento备忘录模式]()</li><li>Observer观察者模式]()√</li><li>State状态模式]()</li><li>Strategy策略模式]()</li><li>Template Method模板方法模式]()</li><li>Visitor访问者模式]()</li></ul></li></ul><p>Todo:</p><ol><li><p>Flyweight √</p></li><li><p>Command √</p></li><li><p>Mediator √</p></li><li><p>Strategy √</p></li><li><p>Template Method √</p></li><li><p>Visitor √</p></li><li><p>Memento √</p></li><li><p>Bridge √</p></li><li><p>Composite</p></li></ol>',5)]))}const g=l(a,[["render",o]]);export{_ as __pageData,g as default};
