import{_ as l}from"./chunks/ImageWithCaption.D5U8n0eP.js";import{D as h}from"./chunks/Divider.D9KglGmp.js";import{c as t,o as k,Z as p,H as n,x as i,a}from"./chunks/vendor.JG3V3vMx.js";import"./app.DJMRJ_62.js";const e="/refactoring/mediator/mediator.png",c=JSON.parse('{"title":"调和者模式","description":"","frontmatter":{},"headers":[],"relativePath":"js/Patterns/Mediator.md","filePath":"js/Patterns/Mediator.md","lastUpdated":1741155335000}'),r={name:"js/Patterns/Mediator.md"},b=Object.assign(r,{setup(E){return(d,s)=>(k(),t("div",null,[s[0]||(s[0]=p("",7)),n(l,{src:"/refactoring/mediator/problem1-en.png",caption:"当应用规模变大时,用户界面的各种元素关系很可能因此也变得混乱"}),s[1]||(s[1]=i("p",null,'表单里的一些元素可能需要跟其它表单进行交互.比如说,当用户勾选了"我有一条狗的选项"后,会新增一个文本框,用以填入狗狗的名称.还有可能是,点击提交按钮前,需要对所有表单项进行校验.',-1)),n(l,{src:"/refactoring/mediator/problem2.png",caption:"元素之间可能有多种关系.因此,某些元素的变化可能会导致另外的元素也发生变化"}),s[2]||(s[2]=i("p",null,[a("如果你直接在元素定义的代码内解决它们之间的关系的话,那元素的可用性可能就会很低,类的定义也变得相当复杂了."),i("br"),a(' 比如,由于"我有一条狗"的选项框跟填入狗名称的文本框耦合到一起,你就无法在其它地方服用这个选项框了.这就导致,要么只能一起用,要么都不能用.')],-1)),s[3]||(s[3]=i("h2",{id:"解决办法",tabindex:"-1"},[a("解决办法 "),i("a",{class:"header-anchor",href:"#解决办法","aria-label":'Permalink to "解决办法"'},"​")],-1)),s[4]||(s[4]=i("p",null,'调和者模式的主要思想是,避免组件之间直接联系,使组件各自互相独立.它们之间如果需要合作,就需要调用一个特别的"调和者"对象,将组件的关系重新连接起来.这样做的结果使,组件只会依赖于一个单独的调和者对象,而无需跟多个其它组件耦合到一起.',-1)),s[5]||(s[5]=i("p",null,"回到我们的编辑概况表单,对话框类本身可以作为一个调和者.大部分情况下,对话框类是直到它具备哪些子元素的,所以你不再需要在里面再建立新的依赖.",-1)),n(l,{src:"/refactoring/mediator/solution1-en.png",caption:"界面元素需经过调和者对象实现间接交互合作"}),s[6]||(s[6]=i("p",null,"最重要的变化是实际表单上的元素.我们先拿提交按钮为例:之前每当用户点击这个按钮,它就会触发校验所有表单项的值.而使用了这种模式后,这个按钮的责任就变成了,简单得不得了的,告知dialog类(调和者对象)它被点击了就可以了.调和者对象得知它被点击后,就会自身实现验证操作,或是把某些任务传递给某个独立的元素.因此,我们的提交按钮不再被多个其它元素捆绑在一起了,它只依赖于调和者对象,dialog类.",-1)),s[7]||(s[7]=i("p",null,"你可以按照这种解耦方式进一步下去,把所有通用接口提取出来,应用到各种对话框中去.接口内应具备一些告知的方法,这样表单元素就可以调用这些方法,告知作为调和者的接口,自身触发了哪些事件.因此,我们的提交按钮现在已经可以跟任意实现了这个接口的对话框类进行交互了.",-1)),s[8]||(s[8]=i("p",null,"调和者模式可以让你把对象之间复杂的关系网,通过一个中介对象给封装起来.类的依赖越少,它本身就越不怕被修改,也越容易扩充,或是重用.",-1)),s[9]||(s[9]=i("h2",{id:"真实世界的类比",tabindex:"-1"},[a("真实世界的类比 "),i("a",{class:"header-anchor",href:"#真实世界的类比","aria-label":'Permalink to "真实世界的类比"'},"​")],-1)),n(l,{src:"/refactoring/mediator/live-example.png",caption:"飞行员之间不会直接互相沟通,以决定谁先着陆.所有的沟通都经由控制塔完成"}),s[10]||(s[10]=i("p",null,[a('飞行员起飞或降落时不会直接与其它飞行员沟通.他们会向"空中交通控制塔"发出指示,后者通过观察机场航道的情况决定各飞机的操作顺序.没有这个控制塔的话,飞行员就不得不直到机场里所有飞机的情况,与多个飞行员共同讨论各自着陆顺序了.真这样做我都不敢想飞机失事率会有多高了.'),i("br"),a(" 控制塔不需控制飞机的整个飞行过程.它的存在只是限制飞行员到机场终点时的操作,因为一个机场里的情况是相当复杂的,这些情况的处理不应该由飞行员承担.")],-1)),n(h),s[11]||(s[11]=p("",23))]))}});export{c as __pageData,b as default};
