import{_ as e,c as a,o as t,a3 as r}from"./chunks/framework.D006jthy.js";const S=JSON.parse('{"title":"为什么选择Next.js?","description":"","frontmatter":{},"headers":[],"relativePath":"react/Next/Why-Next.md","filePath":"react/Next/Why-Next.md"}'),o={name:"react/Next/Why-Next.md"},n=r('<h1 id="为什么选择next-js" tabindex="-1">为什么选择Next.js? <a class="header-anchor" href="#为什么选择next-js" aria-label="Permalink to &quot;为什么选择Next.js?&quot;">​</a></h1><blockquote><p><a href="https://dev.to/kharkizi/nextjs-unleashing-the-power-of-performance-and-seo-for-web-development-2go" target="_blank" rel="noreferrer">https://dev.to/kharkizi/nextjs-unleashing-the-power-of-performance-and-seo-for-web-development-2go</a><br> 作者:Kha Nguyễn Viết<br> 简要翻译,不完全准确;老生常谈,从未深入的框架,至今分不清next,nuxt,nest.听说对应react,vue,node.<br> 23:45-0:04</p></blockquote><p><strong>Next是React的又一层抽象,自带了各种构建网页应用需要的依赖.提供了一些额外的好处.</strong></p><h2 id="_1-服务器端渲染及静态网页生成-server-side-rendering-static-site-generation" tabindex="-1">1.服务器端渲染及静态网页生成(Server-Side Rendering &amp; Static Site Generation) <a class="header-anchor" href="#_1-服务器端渲染及静态网页生成-server-side-rendering-static-site-generation" aria-label="Permalink to &quot;1.服务器端渲染及静态网页生成(Server-Side Rendering &amp; Static Site Generation)&quot;">​</a></h2><p>Next.js支持SSR和SSG,网页可以在服务器端渲染完再发给客户端(SSR),或直接就是完整的内容发给客户端(SSG).有SEO的好处(Search Engine Optimization),搜索引擎能找到,提高内容可查找性.(根据需求选择使用).</p><h2 id="_2-seo" tabindex="-1">2. SEO <a class="header-anchor" href="#_2-seo" aria-label="Permalink to &quot;2. SEO&quot;">​</a></h2><p>前面说过了,SSR能提高搜索引擎上的可搜索性.更容易被找到,某些数据(比如访问量)可以提高.</p><h2 id="_3-整合了react和typescript" tabindex="-1">3.整合了React和Typescript <a class="header-anchor" href="#_3-整合了react和typescript" aria-label="Permalink to &quot;3.整合了React和Typescript&quot;">​</a></h2><p>是React上一层的抽象,支持React再正常不过.TS则可以根据需要自行选择.</p><h2 id="_4-简易路由" tabindex="-1">4.简易路由 <a class="header-anchor" href="#_4-简易路由" aria-label="Permalink to &quot;4.简易路由&quot;">​</a></h2><p>自带路由系统,文件名即实际URL路径名.可动态可hook自定义,灵活性强.也是自带的,会用就很有用.</p><h2 id="_5-容易部署" tabindex="-1">5.容易部署 <a class="header-anchor" href="#_5-容易部署" aria-label="Permalink to &quot;5.容易部署&quot;">​</a></h2><p>和Vercel,Netlify,AWS Amplify这些部署服务器比较契合.项目可以通过这些,比较简单的实际部署到生产环境.</p><h2 id="_6-社区强大-教学文档丰富" tabindex="-1">6.社区强大,教学文档丰富 <a class="header-anchor" href="#_6-社区强大-教学文档丰富" aria-label="Permalink to &quot;6.社区强大,教学文档丰富&quot;">​</a></h2><p>多人用,教程也很多很详细,想学很容易找到资源.踩坑也不怕没人孤独.(???多到不知哪个好,除了official的)</p><h2 id="_7-跟其它技术的整合还算灵活" tabindex="-1">7.跟其它技术的整合还算灵活 <a class="header-anchor" href="#_7-跟其它技术的整合还算灵活" aria-label="Permalink to &quot;7.跟其它技术的整合还算灵活&quot;">​</a></h2><p>像GraphQL,Redux,CSS-in-JS这些库要用在Next项目还不算太难.还是根据实际需求再选这些吧.</p><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>Next.js是个强大的网页开发工具:灵活,多功能,为开发者提供巨大便利.<br><strong>如果你要构建一定规模的应用</strong>,Next是个不错选择.(不是绑定React了吗?)</p>',19),i=[n];function s(h,c,l,d,p,_){return t(),a("div",null,i)}const u=e(o,[["render",s]]);export{S as __pageData,u as default};
