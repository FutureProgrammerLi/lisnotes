import{_ as e}from"./app.DIHfSNGC.js";import{c as r,o as i,ab as a}from"./chunks/vendor.cEhGAX-6.js";const _=JSON.parse('{"title":"样式","description":"","frontmatter":{},"headers":[],"relativePath":"react/Official-Docs/Next/Styling/overview.md","filePath":"react/Official-Docs/Next/Styling/overview.md","lastUpdated":1738226181000}'),l={name:"react/Official-Docs/Next/Styling/overview.md"};function s(n,t,o,p,S,c){return i(),r("div",null,t[0]||(t[0]=[a('<h1 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to “样式”">​</a></h1><p>Next应用支持多种添加样式的方法,包括以下:</p><ul><li><strong>CSS Modules:</strong> 创建本地作用域的样式类,避免命名冲突,提高样式可维护性.</li><li><strong>全局CSS:</strong> 易用,对传统CSS熟手的人士较为友好.不过缺点是随着应用体积的变大,样式打包的大小,样式的管理难度也随即增加.</li><li><strong>TailwindCSS:</strong> 一个以实用优先的CSS框架.能让你组合使用各种实用类以构建自己设计样式.</li><li><strong>Sass:</strong> 一种广受欢迎的CSS预处理器,扩展了CSS功能,包括变量,嵌套规则和混入等.</li><li><strong>CSS-in-JS:</strong> 直接在JS组件中编写CSS代码,从而能够实现动态样式和带有作用域的样式.</li></ul><p>以上方法的细节,可以去各自的官方文档中查看学习:</p><ul><li><a href="https://nextjs.org/docs/app/building-your-application/styling/css" target="_blank" rel="noreferrer">CSS</a></li><li><a href="https://nextjs.org/docs/app/building-your-application/styling/tailwind-css" target="_blank" rel="noreferrer">Tailwind CSS</a></li><li><a href="https://nextjs.org/docs/app/building-your-application/styling/sass" target="_blank" rel="noreferrer">Sass</a></li><li><a href="https://nextjs.org/docs/app/building-your-application/styling/css-in-js" target="_blank" rel="noreferrer">CSS-in-JS</a></li></ul><p>(上面的跳转都是Next官网本身内容,而非其它介绍文章)</p>',6)]))}const f=e(l,[["render",s]]);export{_ as __pageData,f as default};
