import{_ as r,c as t,o as a,ak as o,j as i}from"./chunks/framework.BeJGjSYE.js";const S=JSON.parse('{"title":"又在Server Actions问题里遇到的问题","description":"","frontmatter":{},"headers":[],"relativePath":"react/Practice/Server-Actions2.md","filePath":"react/Practice/Server-Actions2.md","lastUpdated":1744869439000}'),c={name:"react/Practice/Server-Actions2.md"};function s(l,e,d,n,_,m){return a(),t("div",null,e[0]||(e[0]=[o('<h1 id="又在server-actions问题里遇到的问题" tabindex="-1">又在Server Actions问题里遇到的问题 <a class="header-anchor" href="#又在server-actions问题里遇到的问题" aria-label="Permalink to “又在Server Actions问题里遇到的问题”">​</a></h1><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to “问题”">​</a></h2><ol><li>结合了<code>use</code>API后才发现, 传递的Server Action Promise只针对GET请求;POST请求直接就会被执行而不是绑定事件处理器;</li><li>Mongo里的神奇问题: 格式校验不通过无法写入数据库.之前是可以的, Date类型的数据变字符串了(?)</li><li>redis缓存的问题(未解决): (GET)获取列表时直接返回对应键名的值, 更新(POST)之后,GET因为对应KEY值存在,直接返回了原始KEY的值,哪怕值已经被新插入数据.</li><li>客户端组件触发Server Action能否脱离form组件?</li></ol><ul><li>单一个button,要抽出来单独客户端组件先不说,</li><li>还要包裹到form元素里;</li><li>还要调用<code>useActionState</code>, 绑定<code>formAction</code>事件;</li></ul>',4),i("div",{className:"font-bold text-gray-500 text-xl"},"太太太太太太麻烦了吧😣",-1),o('<hr><div class="text-red-500 font-bold text-xl"> 就算是总结一篇Server Actions的文章.包括ServerActions的传递问题 </div><hr><p>不知道校验这个问题把我带到哪了,先记录一下 想Next.js+Express+Mongoose实现类型安全,发现需要实现验证的地方有:</p><ol><li>zod + server actions, <code>createUserScheme</code>, <code>schema.safeParse</code>对请求参数进行校验;</li><li>express + zod, 在Mongoose里,利用<code>model.safeParse</code>,在真正操作数据库前再进行一次验证.(只是为了跳过客户端,直接通过服务器端对数据库进行操作.校验是一样的,一个前端一个后端.)</li><li>在models,利用TS,及创建database schema时对数据库类型进行约束.(?创建了之后不就没用了吗?)</li></ol><p>优化点:</p><ul><li>共享<code>createUserSchema</code></li><li>利用<code>zod.infer</code>实现类型推导;</li><li>利用中间件进行数据校验?哪些请求需要?</li><li>怎么用monorepo共享schema?</li></ul><p>// 使用monorepo, 共享了schema, 失去了dev turbopack. 前者用于校验, 后者用于快速启动项目</p><p>// left 用共享的schema实现next + express端的校验 + deepseek聊天记录</p>',9)]))}const h=r(c,[["render",s]]);export{S as __pageData,h as default};
