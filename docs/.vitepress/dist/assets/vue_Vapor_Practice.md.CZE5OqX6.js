import{_ as a,c as s,o as n,ak as i}from"./chunks/framework.BeJGjSYE.js";const u=JSON.parse('{"title":"实践Vapor Mode","description":"","frontmatter":{},"headers":[],"relativePath":"vue/Vapor/Practice.md","filePath":"vue/Vapor/Practice.md","lastUpdated":1755444464000}'),p={name:"vue/Vapor/Practice.md"};function r(t,e,l,o,d,c){return n(),s("div",null,e[0]||(e[0]=[i(`<h1 id="实践vapor-mode" tabindex="-1">实践Vapor Mode <a class="header-anchor" href="#实践vapor-mode" aria-label="Permalink to “实践Vapor Mode”">​</a></h1><p>翻译了几篇相关文章,感觉可以上手了.<br> 实践是检验真理的唯一标准,一些文章的内容其实也不一定对.<br> 所以不如自己总结一下,自己可行的,启用Vapor Mode的方法</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to “总结”">​</a></h2><ol><li><p>使用Vue^3.6.0-alpha.2 版本(25/8/17),latest都不行,latest是3.5.18</p></li><li><p><code>createVaporApp</code> 全局使用Vapor Mode(组件内还是依赖<code>&lt;script setup vapor&gt;</code>)</p></li><li><p><strong><code>&lt;script setup vapor&gt;</code> 局部使用Vapor Mode</strong></p></li><li><p>混合使用Vapor Component和VDOM traditional components(<code>vaporInteropPlugin</code>)</p></li><li><p>校验是否启用成功Vapor Mode (<code>_renderEffect</code>, <code>_setText</code>, <code>_template...</code>)</p></li><li><p>局部启用VaporMode不可行的方法<br> 6.1 <code>&lt;template v-vapor&gt;</code><br> 6.2 <code>defineOptions({vapor:true})</code><br> 6.3 组件命名&quot;Comp.vapor.vue&quot;</p></li><li><p>全局使用Vapor Mode不可行的方法<br> 7.1 Vite的<code>experimental:{vapor:true}</code>用不了.哪怕用的是7.1.2版本.@vitejs/plugin-vue@latest也不行.</p></li></ol><h2 id="_1-依赖安装" tabindex="-1">1.依赖安装 <a class="header-anchor" href="#_1-依赖安装" aria-label="Permalink to “1.依赖安装”">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># mkdir vapor-test</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># cd vapor-test</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># npm init -y</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue@3.6.0-alpha.2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite@latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @vitejs/plugin-vue@latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_2-3-4-createapp和createvaporapp" tabindex="-1">2/3/4.createApp和createVaporApp <a class="header-anchor" href="#_2-3-4-createapp和createvaporapp" aria-label="Permalink to “2/3/4.createApp和createVaporApp”">​</a></h2><ol><li><code>createVaporApp</code>的话,必须所有组件都已启用<code>&lt;script setup vapor&gt;</code>,否则会报错.</li></ol><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>[Vue warn]: Unhandled error during execution of render function </span></span>
<span class="line"><span>  at &lt;App &gt;</span></span>
<span class="line"><span>Uncaught TypeError: Cannot read properties of undefined (reading &#39;insert&#39;)</span></span>
<span class="line"><span>    at insert (vue.js?v=ff5e4179:13087:15)</span></span>
<span class="line"><span>    at insert (vue.js?v=ff5e4179:13090:7)</span></span>
<span class="line"><span>    at mountComponent (vue.js?v=ff5e4179:14323:3)</span></span>
<span class="line"><span>    at createComponent (vue.js?v=ff5e4179:14206:5)</span></span>
<span class="line"><span>    at _sfc_render</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2"><li><code>createApp</code>,如果组件中包含vapor component,则需要结合<code>vaporInteropPlugin</code>使用,否则也会报错.</li></ol><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>[Vue warn]: Vapor component found in vdom tree but vapor-in-vdom interop was not installed. Make sure to install it:</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>import { vaporInteropPlugin } from &#39;vue&#39; app.use(vaporInteropPlugin)</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>  at &lt;App&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>2</strong>是比较常见的混用报错,解决方法也给出来了,引入插件,全局使用这个<code>vaporInteropPlugin</code>就可以了.</p><h2 id="_5-校验是否成功启用vapor-mode" tabindex="-1">5.校验是否成功启用Vapor Mode <a class="header-anchor" href="#_5-校验是否成功启用vapor-mode" aria-label="Permalink to “5.校验是否成功启用Vapor Mode”">​</a></h2><p>看编译后的代码就知道了.</p><ol><li><a href="https://vapor-repl.netlify.app/" target="_blank" rel="noreferrer">去这个网站</a>,在<code>script setup</code>里加上<code>vapor</code>, <code>function render</code>的内容都变完了,说明启用成功了</li><li>按F12,Sources标签-&gt;src-&gt;App.vue<a href="./oboard-post.html#vapor-mode所利用的api">一些Vapor Mode下特有的API</a>,看到它们就代表启用成功了.<br> 主要看<code>_sfc_render</code>这个函数,里面是<code>const t0 = _template(/***/)</code>,\`\`_renderEffect(() =&gt; _setText(n0, msg.value))<code>等等的字眼就是成功. </code>_createElementBlock<code>,</code>_toDisplayString\`等字眼就是没启用成功,还用的VDOM方法.</li></ol>`,17)]))}const b=a(p,[["render",r]]);export{u as __pageData,b as default};
